When would you want to use a remote repository rather than keeping all your work local?
 A remote repository can be accessed from anywhere or any computer, making collaboration and accessing lost files much easier.

Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
 You would have less control over when and what is pulled from your remote repository.

Describe the differences between forks, clones, and branches. When would you use one instead of another?
 Forks take someone else's repository and copies it to your remote repository where you can make changes without changing their original project. Clones copy a repository from github to your local repository and branches add variations to a project. You use branches when you want to make changes within a project  as opposed to cloning something, which copies an entire project. You would use forking when you don't want to copy a project to your local file and just make changes on github. 

What is the benefit of having a copy of the last known state of the remote stored locally?
 You are able to work on the project in case you don't have internet access.

How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
 I would use some other cloud sharing service, but it would not be specifially tailored for web development, which would make making changes, saving versions and collaborating much harder.
 
When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
Making changes in a separate branch would need to be when there is a very significant change being made to the code that you don't want to affect your code. The benefit is having that separation from other people's work, and the opportunity to expriment without destroying your project, however it can get difficult merging those branches and making updates.
